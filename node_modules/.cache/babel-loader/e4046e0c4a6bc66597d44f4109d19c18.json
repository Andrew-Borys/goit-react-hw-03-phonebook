{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\REACT-HW\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\Filter\\\\Filter.jsx\";\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = _ref => {\n  let {\n    onInputEntry\n  } = _ref;\n  const filterInputId = nanoid(); // console.log(onInputEntry);\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: filterInputId,\n    children: [\"Find contacts by name\", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: filterInputId,\n      type: \"text\",\n      name: \"filter\",\n      onChange: onInputEntry,\n      pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n      title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Filter;\nexport default Filter; // import { Component } from 'react';\n// import { nanoid } from 'nanoid';\n// export class Filter extends Component {\n//   filterInputId = nanoid();\n//   handleInputChange = event => {\n//     const { value } = event.currentTarget;\n//     this.props.onSubmit(value);\n//   };\n//   render() {\n//     return (\n//       <label htmlFor={this.filterInputId}>\n//         Find contacts by name\n//         <input\n//           id={this.filterInputId}\n//           type=\"text\"\n//           name=\"filter\"\n//           // value={this.state.filter}\n//           onChange={this.handleInputChange}\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//         />\n//       </label>\n//     );\n//   }\n// }\n// export default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/work/REACT-HW/goit-react-hw-02-phonebook/src/components/Filter/Filter.jsx"],"names":["nanoid","Filter","onInputEntry","filterInputId"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,MAAM,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AACnC,QAAMC,aAAa,GAAGH,MAAM,EAA5B,CADmC,CAGnC;;AAEA,sBACE;AAAO,IAAA,OAAO,EAAEG,aAAhB;AAAA,qDAEE;AACE,MAAA,EAAE,EAAEA,aADN;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,QAAQ,EAAED,YAJZ;AAKE,MAAA,OAAO,EAAC,wHALV;AAME,MAAA,KAAK,EAAC,wIANR;AAOE,MAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnBD;;KAAMD,M;AAqBN,eAAeA,MAAf,C,CAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { nanoid } from 'nanoid';\r\n\r\nconst Filter = ({ onInputEntry }) => {\r\n  const filterInputId = nanoid();\r\n\r\n  // console.log(onInputEntry);\r\n\r\n  return (\r\n    <label htmlFor={filterInputId}>\r\n      Find contacts by name\r\n      <input\r\n        id={filterInputId}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={onInputEntry}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\n// import { Component } from 'react';\r\n// import { nanoid } from 'nanoid';\r\n\r\n// export class Filter extends Component {\r\n//   filterInputId = nanoid();\r\n\r\n//   handleInputChange = event => {\r\n//     const { value } = event.currentTarget;\r\n\r\n//     this.props.onSubmit(value);\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <label htmlFor={this.filterInputId}>\r\n//         Find contacts by name\r\n//         <input\r\n//           id={this.filterInputId}\r\n//           type=\"text\"\r\n//           name=\"filter\"\r\n//           // value={this.state.filter}\r\n//           onChange={this.handleInputChange}\r\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n//           required\r\n//         />\r\n//       </label>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Filter;\r\n"]},"metadata":{},"sourceType":"module"}