{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\REACT-HW\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactFormik.jsx\";\nimport React from 'react';\nimport { Field, Form, Formik, FormikProps } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyInput = _ref => {\n  let {\n    field,\n    form,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"input\", { ...field,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n\n_c = MyInput;\n\nconst Example = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"My Form\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      color: 'red',\n      firstName: '',\n      lastName: ''\n    },\n    onSubmit: (values, actions) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        actions.setSubmitting(false);\n      }, 1000);\n    },\n    children: props => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        as: \"select\",\n        name: \"color\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"red\",\n          children: \"Red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"green\",\n          children: \"Green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"blue\",\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastName\",\n        children: _ref2 => {\n          let {\n            field,\n            // { name, value, onChange, onBlur }\n            form: {\n              touched,\n              errors\n            },\n            // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n            meta\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Email\",\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: meta.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastName\",\n        placeholder: \"Doe\",\n        component: MyInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n\n_c2 = Example;\nexport default Example; // import { Field, Form, Formik } from \"formik\";\n// const initialValue = {\n//   name: '',\n//   number:'',\n// }\n// const ContactForm = (props) = {\n//   const handleSubmitForm = (values, actions) => {\n//     console.log(values);\n//     console.log(actions);\n//   }\n//   (\n//     <Formik initialValue = {initialValue} onSubmit={handleSubmitForm}>\n//       <Form>\n//         <label htmlFor={}>\n//               Enter name\n//               <Field\n//                 type=\"text\"\n//                 name=\"name\"\n//                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//                 title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//                 required\n//               />\n//         </label>\n//             <label htmlFor={}>\n//               Tel number\n//               <Field\n//                 type=\"tel\"\n//                 name=\"number\"\n//                 pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//                 title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//                 required\n//               />\n//             </label>\n//             <button type=\"submit\">Add contact</button>\n//       </Form>\n//     </Formik >\n//   )\n// }\n// export default ContactForm\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyInput\");\n$RefreshReg$(_c2, \"Example\");","map":{"version":3,"sources":["C:/work/REACT-HW/goit-react-hw-02-phonebook/src/components/ContactForm/ContactFormik.jsx"],"names":["React","Field","Form","Formik","FormikProps","MyInput","field","form","props","Example","email","color","firstName","lastName","values","actions","setTimeout","alert","JSON","stringify","setSubmitting","touched","errors","meta","error"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Field, Form, Formik, FormikProps } from 'formik';\r\n\r\nconst MyInput = ({ field, form, ...props }) => {\r\n  return <input {...field} {...props} />;\r\n};\r\n\r\nconst Example = () => (\r\n  <div>\r\n    <h1>My Form</h1>\r\n    <Formik\r\n      initialValues={{ email: '', color: 'red', firstName: '', lastName: '' }}\r\n      onSubmit={(values, actions) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          actions.setSubmitting(false);\r\n        }, 1000);\r\n      }}\r\n    >\r\n      {(props: FormikProps<any>) => (\r\n        <Form>\r\n          <Field type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n          <Field as=\"select\" name=\"color\">\r\n            <option value=\"red\">Red</option>\r\n            <option value=\"green\">Green</option>\r\n            <option value=\"blue\">Blue</option>\r\n          </Field>\r\n\r\n          <Field name=\"lastName\">\r\n            {({\r\n              field, // { name, value, onChange, onBlur }\r\n              form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n              meta,\r\n            }) => (\r\n              <div>\r\n                <input type=\"text\" placeholder=\"Email\" {...field} />\r\n                {meta.touched && meta.error && (\r\n                  <div className=\"error\">{meta.error}</div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Field>\r\n          <Field name=\"lastName\" placeholder=\"Doe\" component={MyInput} />\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default Example;\r\n\r\n// import { Field, Form, Formik } from \"formik\";\r\n\r\n// const initialValue = {\r\n//   name: '',\r\n//   number:'',\r\n// }\r\n\r\n// const ContactForm = (props) = {\r\n\r\n//   const handleSubmitForm = (values, actions) => {\r\n//     console.log(values);\r\n//     console.log(actions);\r\n//   }\r\n\r\n//   (\r\n//     <Formik initialValue = {initialValue} onSubmit={handleSubmitForm}>\r\n//       <Form>\r\n//         <label htmlFor={}>\r\n//               Enter name\r\n//               <Field\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//                 title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n//                 required\r\n//               />\r\n//         </label>\r\n//             <label htmlFor={}>\r\n//               Tel number\r\n//               <Field\r\n//                 type=\"tel\"\r\n//                 name=\"number\"\r\n//                 pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//                 title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n//                 required\r\n//               />\r\n//             </label>\r\n//             <button type=\"submit\">Add contact</button>\r\n//       </Form>\r\n//     </Formik >\r\n//   )\r\n// }\r\n\r\n// export default ContactForm\r\n"]},"metadata":{},"sourceType":"module"}