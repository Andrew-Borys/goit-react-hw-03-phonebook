{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\REACT-HW\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n    this.nameInputId = nanoid();\n    this.telInputId = nanoid();\n\n    this.handleNameChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmitForm = event => {\n      event.preventDefault();\n      const contact = {\n        name: this.state.name,\n        number: this.state.number\n      }; // console.log(contact);\n\n      this.props.onSubmit(contact);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmitForm,\n      style: {\n        margin: 'auto',\n        border: '1px solid black',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this.nameInputId,\n        style: {\n          marginRight: '40px'\n        },\n        children: [\"Enter name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: this.nameInputId,\n          type: \"text\",\n          name: \"name\",\n          value: this.state.name,\n          onChange: this.handleNameChange,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this.telInputId,\n        children: [\"Tel number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: this.telInputId,\n          type: \"tel\",\n          name: \"number\",\n          value: this.state.number,\n          onChange: this.handleNameChange,\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/work/REACT-HW/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["Component","nanoid","ContactForm","state","name","number","nameInputId","telInputId","handleNameChange","event","value","currentTarget","setState","handleSubmitForm","preventDefault","contact","props","onSubmit","reset","render","margin","border","padding","marginRight"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCG,KADkC,GAC1B;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD0B;AAAA,SAMlCC,WANkC,GAMpBL,MAAM,EANc;AAAA,SAOlCM,UAPkC,GAOrBN,MAAM,EAPe;;AAAA,SASlCO,gBATkC,GASfC,KAAK,IAAI;AAC1B,YAAM;AAAEL,QAAAA,IAAF;AAAQM,QAAAA;AAAR,UAAkBD,KAAK,CAACE,aAA9B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACR,IAAD,GAAQM;AAAV,OAAd;AACD,KAZiC;;AAAA,SAclCG,gBAdkC,GAcfJ,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;AAEA,YAAMC,OAAO,GAAG;AACdX,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADH;AAEdC,QAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE;AAFL,OAAhB,CAH0B,CAQ1B;;AAEA,WAAKW,KAAL,CAAWC,QAAX,CAAoBF,OAApB;AACA,WAAKG,KAAL;AACD,KA1BiC;;AAAA,SA4BlCA,KA5BkC,GA4B1B,MAAM;AACZ,WAAKN,QAAL,CAAc;AACZR,QAAAA,IAAI,EAAE,EADM;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID,KAjCiC;AAAA;;AAmClCc,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,QAAQ,EAAE,KAAKN,gBADjB;AAEE,MAAA,KAAK,EAAE;AACLO,QAAAA,MAAM,EAAE,MADH;AAELC,QAAAA,MAAM,EAAE,iBAFH;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAFT;AAAA,8BAQE;AAAO,QAAA,OAAO,EAAE,KAAKhB,WAArB;AAAkC,QAAA,KAAK,EAAE;AAAEiB,UAAAA,WAAW,EAAE;AAAf,SAAzC;AAAA,8CAEE;AACE,UAAA,EAAE,EAAE,KAAKjB,WADX;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,IAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKI,gBALjB;AAME,UAAA,OAAO,EAAC,wHANV;AAOE,UAAA,KAAK,EAAC,wIAPR;AAQE,UAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAqBE;AAAO,QAAA,OAAO,EAAE,KAAKD,UAArB;AAAA,8CAEE;AACE,UAAA,EAAE,EAAE,KAAKA,UADX;AAEE,UAAA,IAAI,EAAC,KAFP;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,MAJpB;AAKE,UAAA,QAAQ,EAAE,KAAKG,gBALjB;AAME,UAAA,OAAO,EAAC,wFANV;AAOE,UAAA,KAAK,EAAC,8FAPR;AAQE,UAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eAkCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsCD;;AA1EiC;;AA6EpC,eAAeN,WAAf","sourcesContent":["import { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = nanoid();\r\n  telInputId = nanoid();\r\n\r\n  handleNameChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmitForm = event => {\r\n    event.preventDefault();\r\n\r\n    const contact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    // console.log(contact);\r\n\r\n    this.props.onSubmit(contact);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.handleSubmitForm}\r\n        style={{\r\n          margin: 'auto',\r\n          border: '1px solid black',\r\n          padding: '20px',\r\n        }}\r\n      >\r\n        <label htmlFor={this.nameInputId} style={{ marginRight: '40px' }}>\r\n          Enter name\r\n          <input\r\n            id={this.nameInputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleNameChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor={this.telInputId}>\r\n          Tel number\r\n          <input\r\n            id={this.telInputId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleNameChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}