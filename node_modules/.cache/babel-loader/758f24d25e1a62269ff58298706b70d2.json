{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\REACT-HW\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport { Component } from 'react';\nimport ContactForm from './ContactForm'; // import ContactList from './ContactList';\n\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.contactId = () => nanoid();\n\n    this.handleSubmitFormData = data => {\n      console.log(data);\n\n      if (this.state.contacts.find(contact => contact.name === data.name)) {\n        alert(`${data.name} is already in contacts`);\n        return;\n      }\n\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, {\n            id: this.contactId(),\n            name: data.name,\n            number: data.number\n          }]\n        };\n      });\n    };\n\n    this.handleFilterData = event => {\n      console.log(event);\n      this.setState({\n        filter: event.currentTarget\n      });\n    };\n\n    this.handleFilteredData = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n      return contacts.filter(contact => contact.name.toLowerCase().trim().includes(filter));\n    };\n\n    this.handleDeleteContact = contactId => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onSubmit: this.handleSubmitFormData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Find contacts by name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"filter\",\n          value: Event.currentTarget.value,\n          onChange: this.handleFilteredData,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/work/REACT-HW/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["Component","ContactForm","nanoid","App","state","contacts","id","name","number","filter","contactId","handleSubmitFormData","data","console","log","find","contact","alert","setState","prevState","handleFilterData","event","currentTarget","handleFilteredData","toLowerCase","trim","includes","handleDeleteContact","render","Event","value"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport ContactForm from './ContactForm';\r\n// import ContactList from './ContactList';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  contactId = () => nanoid();\r\n\r\n  handleSubmitFormData = data => {\r\n    console.log(data);\r\n\r\n    if (this.state.contacts.find(contact => contact.name === data.name)) {\r\n      alert(`${data.name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: [\r\n          ...prevState.contacts,\r\n          {\r\n            id: this.contactId(),\r\n            name: data.name,\r\n            number: data.number,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n  };\r\n\r\n  handleFilterData = event => {\r\n    console.log(event);\r\n    this.setState({\r\n      filter: event.currentTarget,\r\n    });\r\n  };\r\n\r\n  handleFilteredData = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().trim().includes(filter)\r\n    );\r\n  };\r\n\r\n  handleDeleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.handleSubmitFormData} />\r\n\r\n        <h2>Contacts</h2>\r\n        {/* <Filter onSubmit={this.handleFilterData} /> */}\r\n        <label>\r\n          Find contacts by name\r\n          <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={Event.currentTarget.value}\r\n            onChange={this.handleFilteredData}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        {/* <ContactList\r\n          contacts={this.state.contacts}\r\n          // filter={this.state.filter}\r\n          // filter={this.handleFilterData}\r\n          // filtered={this.handleFilteredData}\r\n          onDeleteContact={this.handleDeleteContact}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}