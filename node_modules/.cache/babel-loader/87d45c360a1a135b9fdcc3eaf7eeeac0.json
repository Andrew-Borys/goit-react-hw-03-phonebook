{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\REACT-HW\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n    this.nameInputId = nanoid();\n    this.telInputId = nanoid();\n\n    this.handleNameChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmitForm = event => {\n      event.preventDefault();\n      const contact = {\n        id: '',\n        name: this.state.name,\n        number: this.state.number\n      };\n      console.log(contact);\n      this.props.onSubmit(contact);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmitForm,\n        style: {\n          margin: 'auto',\n          border: '1px solid black',\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: this.nameInputId,\n          style: {\n            marginRight: '40px'\n          },\n          children: [\"Enter name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: this.nameInputId,\n            type: \"text\",\n            name: \"name\",\n            value: this.state.name,\n            onChange: this.handleNameChange,\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: this.telInputId,\n          children: [\"Tel number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: this.telInputId,\n            type: \"tel\",\n            name: \"number\",\n            value: this.state.number,\n            onChange: this.handleNameChange,\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/work/REACT-HW/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["Component","ContactForm","state","name","number","nameInputId","nanoid","telInputId","handleNameChange","event","value","currentTarget","setState","handleSubmitForm","preventDefault","contact","id","console","log","props","onSubmit","reset","render","margin","border","padding","marginRight"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCE,KADkC,GAC1B;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD0B;AAAA,SAMlCC,WANkC,GAMpBC,MAAM,EANc;AAAA,SAOlCC,UAPkC,GAOrBD,MAAM,EAPe;;AAAA,SASlCE,gBATkC,GASfC,KAAK,IAAI;AAC1B,YAAM;AAAEN,QAAAA,IAAF;AAAQO,QAAAA;AAAR,UAAkBD,KAAK,CAACE,aAA9B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACT,IAAD,GAAQO;AAAV,OAAd;AACD,KAZiC;;AAAA,SAclCG,gBAdkC,GAcfJ,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACK,cAAN;AAEA,YAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAE,EADU;AAEdb,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAFH;AAGdC,QAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE;AAHL,OAAhB;AAMAa,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEA,WAAKI,KAAL,CAAWC,QAAX,CAAoBL,OAApB;AACA,WAAKM,KAAL;AACD,KA3BiC;;AAAA,SA6BlCA,KA7BkC,GA6B1B,MAAM;AACZ,WAAKT,QAAL,CAAc;AACZT,QAAAA,IAAI,EAAE,EADM;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAd;AAID,KAlCiC;AAAA;;AAoClCkB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AACE,QAAA,QAAQ,EAAE,KAAKT,gBADjB;AAEE,QAAA,KAAK,EAAE;AACLU,UAAAA,MAAM,EAAE,MADH;AAELC,UAAAA,MAAM,EAAE,iBAFH;AAGLC,UAAAA,OAAO,EAAE;AAHJ,SAFT;AAAA,gCAQE;AAAO,UAAA,OAAO,EAAE,KAAKpB,WAArB;AAAkC,UAAA,KAAK,EAAE;AAAEqB,YAAAA,WAAW,EAAE;AAAf,WAAzC;AAAA,gDAEE;AACE,YAAA,EAAE,EAAE,KAAKrB,WADX;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,IAJpB;AAKE,YAAA,QAAQ,EAAE,KAAKK,gBALjB;AAME,YAAA,OAAO,EAAC,wHANV;AAOE,YAAA,KAAK,EAAC,wIAPR;AAQE,YAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAqBE;AAAO,UAAA,OAAO,EAAE,KAAKD,UAArB;AAAA,gDAEE;AACE,YAAA,EAAE,EAAE,KAAKA,UADX;AAEE,YAAA,IAAI,EAAC,KAFP;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,MAJpB;AAKE,YAAA,QAAQ,EAAE,KAAKI,gBALjB;AAME,YAAA,OAAO,EAAC,wFANV;AAOE,YAAA,KAAK,EAAC,8FAPR;AAQE,YAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF,eAkCE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAwCD;;AA7EiC;;AAgFpC,eAAeP,WAAf","sourcesContent":["import { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = nanoid();\r\n  telInputId = nanoid();\r\n\r\n  handleNameChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmitForm = event => {\r\n    event.preventDefault();\r\n\r\n    const contact = {\r\n      id: '',\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    console.log(contact);\r\n\r\n    this.props.onSubmit(contact);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={this.handleSubmitForm}\r\n          style={{\r\n            margin: 'auto',\r\n            border: '1px solid black',\r\n            padding: '20px',\r\n          }}\r\n        >\r\n          <label htmlFor={this.nameInputId} style={{ marginRight: '40px' }}>\r\n            Enter name\r\n            <input\r\n              id={this.nameInputId}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleNameChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n            />\r\n          </label>\r\n          <label htmlFor={this.telInputId}>\r\n            Tel number\r\n            <input\r\n              id={this.telInputId}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleNameChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}