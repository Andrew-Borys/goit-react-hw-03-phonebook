{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\REACT-HW\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactList\\\\Filter\\\\Filter.jsx\";\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Filter extends Component {\n  constructor() {\n    super(...arguments);\n    this.filterInputId = nanoid();\n\n    this.handleInputChange = event => {\n      const {\n        value\n      } = event.currentTarget;\n      const inputData = value;\n      this.props.onSubmit(inputData);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: this.filterInputId,\n      children: [\"Find contacts by name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: this.filterInputId,\n        type: \"text\",\n        name: \"filter\",\n        value: this.target.value,\n        onChange: this.handleInputChange,\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Filter;","map":{"version":3,"sources":["C:/work/REACT-HW/goit-react-hw-02-phonebook/src/components/ContactList/Filter/Filter.jsx"],"names":["Component","nanoid","Filter","filterInputId","handleInputChange","event","value","currentTarget","inputData","props","onSubmit","render","target"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,OAAO,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SACpCG,aADoC,GACpBF,MAAM,EADc;;AAAA,SAGpCG,iBAHoC,GAGhBC,KAAK,IAAI;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAYD,KAAK,CAACE,aAAxB;AACA,YAAMC,SAAS,GAAGF,KAAlB;AAEA,WAAKG,KAAL,CAAWC,QAAX,CAAoBF,SAApB;AACD,KARmC;AAAA;;AAUpCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAO,MAAA,OAAO,EAAE,KAAKR,aAArB;AAAA,uDAEE;AACE,QAAA,EAAE,EAAE,KAAKA,aADX;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,KAAK,EAAE,KAAKS,MAAL,CAAYN,KAJrB;AAKE,QAAA,QAAQ,EAAE,KAAKF,iBALjB;AAME,QAAA,OAAO,EAAC,wHANV;AAOE,QAAA,KAAK,EAAC,wIAPR;AAQE,QAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA1BmC;AA6BtC,eAAeF,MAAf","sourcesContent":["import { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport class Filter extends Component {\r\n  filterInputId = nanoid();\r\n\r\n  handleInputChange = event => {\r\n    const { value } = event.currentTarget;\r\n    const inputData = value;\r\n\r\n    this.props.onSubmit(inputData);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <label htmlFor={this.filterInputId}>\r\n        Find contacts by name\r\n        <input\r\n          id={this.filterInputId}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={this.target.value}\r\n          onChange={this.handleInputChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n"]},"metadata":{},"sourceType":"module"}